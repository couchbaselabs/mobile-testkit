- name: Install Testserver Java Desktop as Daemon Service
  hosts: testserver
  vars:
    package_name:

  tasks:
  - debug: msg="JAVA_HOME location is {{ ansible_env.JAVA_HOME }}"
  - debug: msg="JSVC_HOME location is {{ ansible_env.JSVC_HOME }}"

  - name: Delete any cblite2 filed generated in previous tests
    file:
      path: ~/javatestserver/*.cblite2
      state: absent
    ignore_errors: yes

  - name: Delete CouchbaseLite libraries from previous install
    file:
      path: ~/javatestserver/CouchbaseLiteTemp
      state: absent
    ignore_errors: yes

  - name: check /tmp/TestServerTemp directory exists
    stat:
      path: /tmp/TestServerTemp
    register: testserver_tmp

  - name: delete previously catched cblite2 files
    file:
      path: /tmp/TestServerTemp
      state: absent
    when: testserver_tmp.stat.exists == True

  - name: Define the log output location
    stat:
      path: ~/javatestserver/output
    register: output_dir

  - name: create the log output directory if not exists
    file:
      path: ~/javatestserver/output
      state: directory
    when: output_dir.stat.exists == False

  - name: Clean up any prerunning TestServer Java Daemon Service
    shell: "ps aux | grep jsvc | awk '{print $2}' | xargs kill -9"
    ignore_errors: yes

  - name: Install and start TestServer Java Daemon Service
    shell: "~/javatestserver/daemon_manager.sh start ~/javatestserver/{{ package_name }}.jar ~/javatestserver/output {{ ansible_env.JAVA_HOME }} {{ ansible_env.JSVC_HOME }} ~/javatestserver/"
    when: ansible_distribution_major_version != "6"

  - name: Install and start TestServer Java Daemon Service
    shell: "~/javatestserver/daemon_manager.sh start ~/javatestserver/{{ package_name }}.jar ~/javatestserver/output {{ ansible_env.JAVA_HOME }} {{ ansible_env.JSVC_HOME }}"
    args:
      chdir: ~/javatestserver
    when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version == "6"

  - name: Wait for port 8080 to become open on the host, don't start checking for 2 seconds
    wait_for:
      port: 8080
      delay: 2