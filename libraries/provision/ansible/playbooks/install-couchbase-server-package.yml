---
- hosts: couchbase_servers
  any_errors_fatal: true
  become: yes

  vars:
    couchbase_server_package_base_url:
    couchbase_server_package_name:
    couchbase_server_package_url: "{{ couchbase_server_package_base_url }}/{{ couchbase_server_package_name }}"

    couchbase_server_admin: Administrator
    couchbase_server_password: password

    # 512 reserved for query service
    couchbase_server_index_ram: 512
    couchbase_server_cluster_ram: "{{((ansible_memtotal_mb|int)*0.8)|int - 512 }}"
    couchbase_server_admin_port: 8091
    couchbase_server_home_path: /opt/couchbase

    # Primary node
    couchbase_server_primary_node: "{{ hostvars[groups.couchbase_servers[0]].ansible_host }}"

    # Current node
    couchbase_server_node: "{{ hostvars[inventory_hostname]['ansible_host'] }}"

    couchbase_server_bucket_type: couchbase
    couchbase_server_bucket_replica: 1
    couchbase_server_bucket_ram: "{{ ((couchbase_server_cluster_ram|int)*0.5)|int }}"

  tasks:
    - debug: msg="Couchbase server primary node {{ couchbase_server_primary_node }}"
    - debug: msg="Couchbase server node {{ couchbase_server_node }}"
    - debug: msg="Downloading Couchbase server v. {{ couchbase_server_package_url }}"

    # Remove Couchbase Server
    - include: tasks/remove-couchbase-server.yml
    - include: tasks/clean-users.yml

    # Download and install
    - name: COUCHBASE SERVER | Download couchbase server
      get_url: url={{ couchbase_server_package_url }} dest=/tmp/{{ couchbase_server_package_name }}

    - name: Install Couchbase Server
      yum: name=/tmp/{{ couchbase_server_package_name }} state=present

    # Change system settings for Couchbase Server
    - name: COUCHBASE SERVER | raise max file descriptors
      copy: src=files/security-nofiles-limit.conf dest=/etc/security/limits.d/20-nofiles.conf owner=root group=root mode=0644

    - name: COUCHBASE SERVER | Disable Transparent Huge Pages
      shell: echo 'for i in /sys/kernel/mm/*transparent_hugepage/enabled; do echo never > $i; done' >> /etc/rc.local
      shell: echo 'for i in /sys/kernel/mm/*transparent_hugepage/defrag; do echo never > $i; done' >> /etc/rc.local
      shell: for i in /sys/kernel/mm/*transparent_hugepage/enabled; do echo never > $i; done
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

    # Start via init scipt if running CBS 4.0.0 or 4.1.0 on CentOS 7.2 due to https://issues.couchbase.com/browse/MB-17193
    - name: COUCHBASE SERVER | Start Couchbase Service (Hack around 7.2 and CBS 4.1.0 issue)
      shell: /opt/couchbase/etc/couchbase_init.d start
      when: ansible_distribution == 'CentOS' and (ansible_distribution_version == '7.2.1511' and (couchbase_server_package_name == 'couchbase-server-enterprise-4.1.0-5005-centos7.x86_64.rpm' or couchbase_server_package_name == 'couchbase-server-enterprise-4.0.0-4051-centos7.x86_64.rpm'))

    - name: COUCHBASE SERVER | Restart Couchbase Service
      service: name=couchbase-server state=restarted
      when: ansible_distribution == 'CentOS' and (not ansible_distribution_version == '7.2.1511' or (not couchbase_server_package_name == 'couchbase-server-enterprise-4.1.0-5005-centos7.x86_64.rpm' and not couchbase_server_package_name == 'couchbase-server-enterprise-4.0.0-4051-centos7.x86_64.rpm'))

    # Configure
    - debug: msg="Couchbase cluster RAM {{ couchbase_server_cluster_ram }}"
    - debug: msg="Couchbase bucket RAM {{ couchbase_server_bucket_ram }}"

    - name: COUCHBASE SERVER | Get major version
      shell: cat /opt/couchbase/VERSION.txt | cut -d '.' -f1
      register: cb_major_version

    - name: COUCHBASE SERVER | Wait for node to be listening on port 8091
      wait_for: port=8091 delay=5 timeout=30

    - name: COUCHBASE SERVER | Configure cluster settings (3.0.X and 3.1.X)
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli cluster-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-port={{couchbase_server_admin_port}} --cluster-ramsize={{ couchbase_server_cluster_ram }}"
      when:  "'3.0' in couchbase_server_package_name or '3.1' in couchbase_server_package_name"

    - name: COUCHBASE SERVER | Configure cluster settings (4.0.X and 4.1.X)
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli cluster-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-port={{couchbase_server_admin_port}} --cluster-ramsize={{ couchbase_server_cluster_ram }}  --services=data,index,query  --cluster-index-ramsize={{ couchbase_server_index_ram }}"
      when:  "'4.0' in couchbase_server_package_name or '4.1' in couchbase_server_package_name"

    - name: COUCHBASE SERVER | Configure cluster settings (4.5.X and 4.6.X)
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli cluster-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-port={{couchbase_server_admin_port}} --cluster-ramsize={{ couchbase_server_cluster_ram }}  --services=data,index,query  --cluster-index-ramsize={{ couchbase_server_index_ram }}  --index-storage-setting=default"
      when:  "'4.5' in couchbase_server_package_name or '4.6' in couchbase_server_package_name"

    - name: COUCHBASE SERVER | Configure cluster settings (4.7.X and up)
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli cluster-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --cluster-username={{ couchbase_server_admin }} --cluster-password={{ couchbase_server_password }} --cluster-port={{couchbase_server_admin_port}} --cluster-ramsize={{ couchbase_server_cluster_ram }}  --services=data,index,query  --cluster-index-ramsize={{ couchbase_server_index_ram }}  --index-storage-setting=default"
      when:  "not '4.0' in couchbase_server_package_name and not '4.1' in couchbase_server_package_name and not '4.5' in couchbase_server_package_name and not '4.6' in couchbase_server_package_name and not '3.0' in couchbase_server_package_name and not '3.1' in couchbase_server_package_name"

    - name: COUCHBASE SERVER | Initialize primary node (3.x only)
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli node-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --node-init-hostname={{ couchbase_server_node }}"
      when: "'3.0' in couchbase_server_package_name or '3.1' in couchbase_server_package_name"

    - name: COUCHBASE SERVER | Initialize primary node
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli node-init -c {{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --node-init-hostname={{ couchbase_server_node }}"
      when: "{{ cb_major_version['stdout'] }} != 2 or (not '3.0' in couchbase_server_package_name and not '3.1' in couchbase_server_package_name)"

    - name: COUCHBASE SERVER | Wait for node to be listening on port 8091
      wait_for: port=8091 delay=5 timeout=30

    - name: COUCHBASE SERVER | Join additional cluster nodes
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli server-add -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --server-add={{ couchbase_server_node }}:{{ couchbase_server_admin_port }} --server-add-username={{ couchbase_server_admin }} --server-add-password={{ couchbase_server_password }}"
      when: not (couchbase_server_node == couchbase_server_primary_node )

    - name: COUCHBASE SERVER | Rebalance cluster
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli rebalance -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }}"
      ignore_errors: yes

    - name: COUCHBASE SERVER | Enable auto failover
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli setting-autofailover -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --enable-auto-failover=1 --auto-failover-timeout=30"
