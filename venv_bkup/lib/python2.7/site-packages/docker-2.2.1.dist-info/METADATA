Metadata-Version: 2.0
Name: docker
Version: 2.2.1
Summary: A Python library for the Docker Engine API.
Home-page: https://github.com/docker/docker-py
Author: Joffrey F
Author-email: joffrey@docker.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Other Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: Apache Software License
Requires-Dist: docker-pycreds (>=0.2.1)
Requires-Dist: requests (>=2.5.2,!=2.11.0,!=2.12.2)
Requires-Dist: six (>=1.4.0)
Requires-Dist: websocket-client (>=0.32.0)
Requires-Dist: ipaddress (>=1.0.16); python_version < "3.3"
Requires-Dist: backports.ssl-match-hostname (>=3.5); python_version < "3.5"

Docker SDK for Python
=====================

|Build Status|

A Python library for the Docker Engine API. It lets you do anything the
``docker`` command does, but from within Python apps â€“ run containers,
manage containers, manage Swarms, etc.

Installation
------------

The latest stable version `is available on
PyPI <https://pypi.python.org/pypi/docker/>`__. Either add ``docker`` to
your ``requirements.txt`` file or install with pip:

::

    pip install docker

Usage
-----

Connect to Docker using the default socket or the configuration in your
environment:

.. code:: python

    import docker
    client = docker.from_env()

You can run containers:

.. code:: python

    >>> client.containers.run("ubuntu", "echo hello world")
    'hello world\n'

You can run containers in the background:

.. code:: python

    >>> client.containers.run("bfirsh/reticulate-splines", detach=True)
    <Container '45e6d2de7c54'>

You can manage containers:

.. code:: python

    >>> client.containers.list()
    [<Container '45e6d2de7c54'>, <Container 'db18e4f20eaa'>, ...]

    >>> container = client.containers.get('45e6d2de7c54')

    >>> container.attrs['Config']['Image']
    "bfirsh/reticulate-splines"

    >>> container.logs()
    "Reticulating spline 1...\n"

    >>> container.stop()

You can stream logs:

.. code:: python

    >>> for line in container.logs(stream=True):
    ...   print line.strip()
    Reticulating spline 2...
    Reticulating spline 3...
    ...

You can manage images:

.. code:: python

    >>> client.images.pull('nginx')
    <Image 'nginx'>

    >>> client.images.list()
    [<Image 'ubuntu'>, <Image 'nginx'>, ...]

`Read the full documentation <https://docker-py.readthedocs.io>`__ to
see everything you can do.

.. |Build Status| image:: https://travis-ci.org/docker/docker-py.svg?branch=master
   :target: https://travis-ci.org/docker/docker-py


